name: Hakyll build and deploy to Pages
on:
  push:
    branches: [ 'main' ]
  workflow_dispatch:

concurrency:
  group: main
  cancel-in-progress: false

jobs:
  build:
    name: Build and upload Pages artifact
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up GHC
        uses: haskell-actions/setup@v2
        id: setup
        with:
          ghc-version: '9.8.1'
          cabal-version: '3.10.2.1'
          cabal-update: true

      - name: Configure build
        run: |
          cabal --project-file=ci.project configure --disable-documentation
          cabal --project-file=ci.project build --dry-run
        # The last step generates dist-newstyle/cache/plan.json for the cache key

      - name: Restore cached dependencies
        uses: actions/cache/restore@v4
        id: cache
        env:
          key: ${{ runner.os }}-ghc-${{ steps.setup.outputs.ghc-version }}-cabal-${{ steps.setup.outputs.cabal-version }}
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ env.key }}-plan-${{ hashFiles('**/plan.json') }}
          restore-keys: ${{ env.key }}-

      - name: Build dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: cabal --project-file=ci.project build all --only-dependencies

      - name: Save built dependencies to cache
        uses: actions/cache/save@v4
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ steps.cache.outputs.cache-primary-key }}

      - name: Create static content
        run: cabal --project-file=ci.project run blog build

      - name: Drop version info into the generated site
        run: git show -s --format='{"repository":"https://github.com/chowells79/blog","commit":"%H","date":"%ci"}' > _site/site_version.json

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    name: Deploy Pages artifact to production
    needs: build

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
